version: '3'

volumes:
  postgres_data:
  static_volume:
  media_volume:

services:
  db:
    image: postgres:13
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  backend:
    container_name: foodgram_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
    env_file: .env
    volumes:
      - static_volume:/backend_static/
      - media_volume:/app/media
    command: sh -c "
        python manage.py migrate && \
        python manage.py collectstatic --noinput && \
        cp -r /app/collected_static/. /backend_static/static/ && \
        gunicorn --bind 0.0.0.0:8000 backend.wsgi"

  frontend:
    container_name: foodgram-front
    build:
      context: ./frontend
      dockerfile: Dockerfile
    command: sh -c "cp -r /app/build/. /static/"
    volumes:
      - static_volume:/static

  gateway:
    container_name: foodgram-proxy
    build:
      context: ./infra
      dockerfile: Dockerfile
    depends_on:
      - backend
      - frontend
    ports:
      - 8003:80
    volumes:
      - media_volume:/media/
      - static_volume:/static/